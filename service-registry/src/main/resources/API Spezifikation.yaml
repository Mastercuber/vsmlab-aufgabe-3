openapi: 3.0.0
info:
  title: eShop
  description: eShop VSLab Master
  version: 1.0.0-oas3
paths:
  /login:
    post:
      summary: Login to the eShop
      description: login point of the eShop
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: eMail adress of the user
                password:
                  type: string
                  description: Password of the user
              required:
                - email
                - password

      responses:
        '200':
          description: Successfully logged in
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Server Error
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /logout:
    get:
      summary: Logout from the eShop
      description: Logout point of the eShop
      responses:
        '200':
          description: Successfully logged out
        '500':
          description: Server Error
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /user/register:
    post:
      summary: Create a new user
      description: Create a new user to the eShop
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: eMail adress and username
                password:
                  type: string
                  description: Password of the user
                firstname:
                  type: string
                  description: First Name
                lastname:
                  type: string
                  description: Last Name
              required:
                - email
                - password
                - firstname
                - lastname
      responses:
        '201':
          description: User successfully registered new Account
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Missing or wrong Request Parameters
        '500':
          description: Server Error
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /category:
    post:
      tags:
      - category
      summary: add new category
      operationId: addCategory
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '201':
          description: CREATED
        '400':
          description: BAD REQUEST
        '500':
          description: INTERNAL SERVER ERROR
        '503':
          description: SERVICE UNAVAILABLE
        '504':
          description: GATEWAY TIMEOUT
    get:
      tags:
        - category
      summary: list all categories
      operationId: getCetegories
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '500':
          description: INTERNAL SERVER ERROR
        '503':
          description: SERVICE UNAVAILABLE
        '504':
          description: GATEWAY TIMEOUT
  /category/{categoryId}:
    delete:
      tags:
      - category
      summary: remove a category by ID
      operationId: deleteCategoryById
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
      responses:
        400:
          description: Category ID is invalid
          content: {}
        404:
          description: Category ID cannot be found
          content: {}
  /product:
    post:
      tags:
      - product
      summary: Add a new product to the store
      description: Add a new product with name, price and category and details
      operationId: addProduct
      parameters:
      - name: name
        in: query
        description: name of product object that needs to be added to the store
        required: true
        schema:
          type: string
      - name: price
        in: query
        description: price of product object that needs to be added to the store
        required: true
        schema:
          type: number
          format: double
      - name: category
        in: query
        description: category of product object that needs to be added to the store
        required: true
        schema:
          $ref: '#/components/schemas/Category'
      - name: details
        in: query
        description: details of product object that needs to be added to the store
        required: true
        schema:
          type: string
      responses:
          '200':
           description: OK
          '400':
           description: BAD REQUEST
          '401':
           description: UNAUTHORIZED
          '405' :
            description: Invalid input
          '500':
           description: INTERNAL SERVER ERROR
          '503':
           description: SERVICE UNAVAILABLE
          '504':
           description: GATEWAY TIMEOUT
    get:
      tags:
      - product
      summary: List all products
      description: List all products from webshop
      operationId: listProducts
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                xml:
                  name: Product
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        400:
         description: BAD REQUEST
        401:
          description: UNAUTHORIZED
        405:
          description: Invalid input
        500:
          description: INTERNAL SERVER ERROR
        503:
          description: SERVICE UNAVAILABLE
        504:
          description: GATEWAY TIMEOUT
  /product/find:
    get:
      tags:
      - product
      summary: Finds Product by description and/or price
      description: Searchdescription and/or min. and/or max. price values can be provided with comma separated
        strings
      operationId: findProducts
      parameters:
      - name: searchDesription
        in: query
        description: Searchdescription that need to be considered for filter
        schema:
          type: string
        required: false
      - name: minPrice
        in: query
        description: Minimum price value that need to be considered for filter
        # style: form ?
        #explode: true ?
        schema:
          type: string
        required: false
      - name: maxPrice
        in: query
        description: Maximum price value that need to be considered for filter
        style: form
        explode: true
        schema:
          type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                xml:
                  name: Product
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        400:
          description: BAD REQUEST
        401:
          description: UNAUTHORIZED
        405:
          description: Invalid input
        500:
          description: INTERNAL SERVER ERROR
        503:
          description: SERVICE UNAVAILABLE
        504:
          description: GATEWAY TIMEOUT

  /product/{productId}:
    get:
      tags:
      - product
      summary: Find product by ID and show details
      description: Returns details of a single product
      operationId: getPrductdetailsById
      parameters:
      - name: productId
        in: path
        description: ID of product to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Invalid ID supplied
          content: {}
        401:
          description: UNAUTHORIZED
        404:
          description: Product not found
          content: {}
        405:
          description: Invalid input
        500:
          description: INTERNAL SERVER ERROR
        503:
          description: SERVICE UNAVAILABLE
        504:
          description: GATEWAY TIMEOUT
    delete:
      tags:
      - product
      summary: Deletes a product
      operationId: deleteProduct
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: productId
        in: path
        description: Product id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        401:
          description: UNAUTHORIZED
        404:
          description: Product not found
          content: {}
        405:
          description: Invalid input
        500:
          description: INTERNAL SERVER ERROR
        503:
          description: SERVICE UNAVAILABLE
        504:
          description: GATEWAY TIMEOUT
components:
  schemas:
    Category:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
      xml:
        name: Category
    Product:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: double
        category:
          $ref: '#/components/schemas/Category'
        details:
          type: string
      xml:
        name: Product
    Role:
      type: object
      required:
        - type
        - level
      properties:
        id:
          type: integer
        type:
          type: string
        level:
          type: integer
      xml:
        name: Role
    User:
      type: object
      required:
        - email
        - password
      properties:
        id:
          type: integer
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
      xml:
        name: User

servers:
  - url: 'https://avensio.de/EShop-1.0.0/'
